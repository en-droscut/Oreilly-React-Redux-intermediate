{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  // or only 'initialState' because it's declared uper with the same name\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {},\n    toggleCounter() {}\n  }\n});\n\n//1. Create the reducer method which contains the logic\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\n\n//2. Initialise the \"store\"\nconst store = createStore(counterReducer);\n\n//3. Return the \"store\"\nexport default store;\n\n//Go to components/Counter.js","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","toggleCounter","counterReducer","type","amount","store"],"sources":["/Users/dragosroscut/work/react/practice/react-redux/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: 'counter',\n  // or only 'initialState' because it's declared uper with the same name\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      \n    },\n    toggleCounter() {}\n  }\n});\n\n//1. Create the reducer method which contains the logic\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    }\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    }\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    }\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    }\n  }\n\n  return state;\n}\n\n//2. Initialise the \"store\"\nconst store = createStore(counterReducer);\n\n//3. Return the \"store\"\nexport default store;\n\n//Go to components/Counter.js"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDH,WAAW,CAAC;EACVI,IAAI,EAAE,SAAS;EACf;EACAH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IACDM,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IACDO,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE,CAExB,CAAC;IACDC,aAAaA,CAAA,EAAG,CAAC;EACnB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,cAAc,GAAGA,CAACL,KAAK,GAAGN,YAAY,EAAES,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACG,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIO,MAAM,CAACG,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACI,MAAM;MACtCX,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIO,MAAM,CAACG,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIO,MAAM,CAACG,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLV,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAW;MAC/BD,OAAO,EAAEK,KAAK,CAACL;IACjB,CAAC;EACH;EAEA,OAAOK,KAAK;AACd,CAAC;;AAED;AACA,MAAMQ,KAAK,GAAGhB,WAAW,CAACa,cAAc,CAAC;;AAEzC;AACA,eAAeG,KAAK;;AAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}