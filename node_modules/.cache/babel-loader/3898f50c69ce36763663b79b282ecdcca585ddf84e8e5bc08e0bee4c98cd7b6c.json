{"ast":null,"code":"import { createStore } from 'redux';\nconst counterReducer = (state = {\n  counter: 0\n}, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1\n    };\n  }\n  const increaseHandler = () => {\n    dispatchEvent({\n      type: 'increase',\n      amount: 5\n    });\n  };\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","counterReducer","state","counter","action","type","increaseHandler","dispatchEvent","amount","store"],"sources":["/Users/dragosroscut/work/react/practice/react-redux/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\n\nconst counterReducer = (state = {counter: 0}, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n    }\n  }\n\n  const increaseHandler = () => {\n    dispatchEvent({ type: 'increase', amount: 5});\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount\n    }\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n    }\n  }\n\n  return state;\n}\n\nconst store = createStore(counterReducer);\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAG;EAACC,OAAO,EAAE;AAAC,CAAC,EAAEC,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;IAC3B,CAAC;EACH;EAEA,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5BC,aAAa,CAAC;MAAEF,IAAI,EAAE,UAAU;MAAEG,MAAM,EAAE;IAAC,CAAC,CAAC;EAC/C,CAAC;EAED,IAAIJ,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAGC,MAAM,CAACI;IAClC,CAAC;EACH;EAEA,IAAIJ,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLF,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG;IAC3B,CAAC;EACH;EAEA,OAAOD,KAAK;AACd,CAAC;AAED,MAAMO,KAAK,GAAGT,WAAW,CAACC,cAAc,CAAC;AAEzC,eAAeQ,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}