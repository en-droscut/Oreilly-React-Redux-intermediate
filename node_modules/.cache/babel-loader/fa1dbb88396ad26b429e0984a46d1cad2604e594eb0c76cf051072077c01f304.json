{"ast":null,"code":"// import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth';\nimport counterReducer from './counter';\n\n//1. Create the reducer method which contains the logic\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     }\n//   }\n\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     }\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     }\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     }\n//   }\n\n//   return state;\n// }\n\n//2. Initialise the \"store\"\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  // reducer: counterSlice.reducer, // only one state\n  reducer: {\n    // if we have more reducers\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\n//3. Export the \"store\"\nexport default store;\n\n//Go to components/Counter.js","map":{"version":3,"names":["configureStore","authReducer","counterReducer","store","reducer","counter","counterSlice","auth","authSlice","counterActions","actions","authActions"],"sources":["/Users/dragosroscut/work/react/practice/react-redux/src/store/index.js"],"sourcesContent":["// import { createStore } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth';\nimport counterReducer from './counter';\n\n//1. Create the reducer method which contains the logic\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     }\n//   }\n\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     }\n//   }\n\n//   if (action.type === \"decrement\") {\n//     return {\n//       counter: state.counter - 1,\n//       showCounter: state.showCounter,\n//     }\n//   }\n\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     }\n//   }\n\n//   return state;\n// }\n\n//2. Initialise the \"store\"\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  // reducer: counterSlice.reducer, // only one state\n  reducer: { // if we have more reducers\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer,\n  }\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\n//3. Export the \"store\"\nexport default store;\n\n//Go to components/Counter.js"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,QAAQ;AAChC,OAAOC,cAAc,MAAM,WAAW;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3B;EACAI,OAAO,EAAE;IAAE;IACTC,OAAO,EAAEC,YAAY,CAACF,OAAO;IAC7BG,IAAI,EAAEC,SAAS,CAACJ;EAClB;AACF,CAAC,CAAC;AAEF,OAAO,MAAMK,cAAc,GAAGH,YAAY,CAACI,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGH,SAAS,CAACE,OAAO;;AAE5C;AACA,eAAeP,KAAK;;AAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}