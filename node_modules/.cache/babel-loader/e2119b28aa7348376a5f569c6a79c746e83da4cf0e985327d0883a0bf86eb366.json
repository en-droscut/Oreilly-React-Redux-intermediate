{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  // or only 'initialState' because it's declared uper with the same name\n  initialState: initialState,\n  reducers: {\n    increment() {},\n    decrement() {},\n    increase() {},\n    toggleCount() {}\n  }\n});\n\n//1. Create the reducer method which contains the logic\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\n\n//2. Initialise the \"store\"\nconst store = createStore(counterReducer);\n\n//3. Return the \"store\"\nexport default store;\n\n//Go to components/Counter.js","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","decrement","increase","toggleCount","counterReducer","state","action","type","amount","store"],"sources":["/Users/dragosroscut/work/react/practice/react-redux/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n  name: 'counter',\n  // or only 'initialState' because it's declared uper with the same name\n  initialState: initialState,\n  reducers: {\n    increment() {},\n    decrement() {},\n    increase() {},\n    toggleCount() {}\n  }\n});\n\n//1. Create the reducer method which contains the logic\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    }\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    }\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    }\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter,\n    }\n  }\n\n  return state;\n}\n\n//2. Initialise the \"store\"\nconst store = createStore(counterReducer);\n\n//3. Return the \"store\"\nexport default store;\n\n//Go to components/Counter.js"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDH,WAAW,CAAC;EACVI,IAAI,EAAE,SAAS;EACf;EACAH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG,CAAC,CAAC;IACdC,SAASA,CAAA,EAAG,CAAC,CAAC;IACdC,QAAQA,CAAA,EAAG,CAAC,CAAC;IACbC,WAAWA,CAAA,EAAG,CAAC;EACjB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGV,YAAY,EAAEW,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAES,KAAK,CAACT,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEQ,KAAK,CAACR;IACrB,CAAC;EACH;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLX,OAAO,EAAES,KAAK,CAACT,OAAO,GAAGU,MAAM,CAACE,MAAM;MACtCX,WAAW,EAAEQ,KAAK,CAACR;IACrB,CAAC;EACH;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLX,OAAO,EAAES,KAAK,CAACT,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEQ,KAAK,CAACR;IACrB,CAAC;EACH;EAEA,IAAIS,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLV,WAAW,EAAE,CAACQ,KAAK,CAACR,WAAW;MAC/BD,OAAO,EAAES,KAAK,CAACT;IACjB,CAAC;EACH;EAEA,OAAOS,KAAK;AACd,CAAC;;AAED;AACA,MAAMI,KAAK,GAAGhB,WAAW,CAACW,cAAc,CAAC;;AAEzC;AACA,eAAeK,KAAK;;AAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}